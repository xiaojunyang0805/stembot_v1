{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    },
    "project": ["./tsconfig.json"]
  },
  "env": {
    "browser": true,
    "es2022": true,
    "node": true,
    "jest": true
  },
  "extends": [
    "next/core-web-vitals",
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "prettier"
  ],
  "plugins": [
    "@typescript-eslint",
    "tailwindcss"
  ],
  "rules": {
    /* TypeScript specific rules */
    "@typescript-eslint/no-unused-vars": ["error", { 
      "argsIgnorePattern": "^_",
      "varsIgnorePattern": "^_",
      "caughtErrorsIgnorePattern": "^_"
    }],
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/no-non-null-assertion": "error",
    "@typescript-eslint/prefer-nullish-coalescing": "error",
    "@typescript-eslint/prefer-optional-chain": "error",
    "@typescript-eslint/no-unnecessary-condition": "error",
    "@typescript-eslint/no-unnecessary-type-assertion": "error",
    "@typescript-eslint/strict-boolean-expressions": [
      "error",
      {
        "allowString": false,
        "allowNumber": false,
        "allowNullableObject": false,
        "allowNullableBoolean": false,
        "allowNullableString": false,
        "allowNullableNumber": false,
        "allowAny": false
      }
    ],
    
    /* General ESLint rules */
    "prefer-const": "error",
    "no-var": "error",
    "no-console": ["warn", { "allow": ["warn", "error"] }],
    "no-debugger": "error",
    "no-alert": "error",
    "eqeqeq": ["error", "always", { "null": "ignore" }],
    "curly": ["error", "all"],
    "brace-style": ["error", "1tbs"],
    "prefer-template": "error",
    "template-curly-spacing": ["error", "never"],
    "object-shorthand": ["error", "always"],
    "prefer-destructuring": ["error", {
      "array": true,
      "object": true
    }],
    
    /* React specific rules */
    "react/prop-types": "off",
    "react/react-in-jsx-scope": "off",
    "react/display-name": "off",
    "react-hooks/exhaustive-deps": "error",
    
    /* Next.js specific rules */
    "@next/next/no-img-element": "error",
    "@next/next/no-html-link-for-pages": "error",
    
    /* Import rules */
    "import/order": [
      "error",
      {
        "groups": [
          "builtin",
          "external",
          "internal",
          "parent",
          "sibling",
          "index"
        ],
        "newlines-between": "always",
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        },
        "pathGroups": [
          {
            "pattern": "react",
            "group": "builtin",
            "position": "before"
          },
          {
            "pattern": "next/**",
            "group": "builtin",
            "position": "before"
          },
          {
            "pattern": "@/**",
            "group": "internal"
          }
        ],
        "pathGroupsExcludedImportTypes": ["builtin"]
      }
    ],
    
    /* Accessibility rules */
    "jsx-a11y/alt-text": "error",
    "jsx-a11y/aria-props": "error",
    "jsx-a11y/aria-proptypes": "error",
    "jsx-a11y/aria-unsupported-elements": "error",
    "jsx-a11y/role-has-required-aria-props": "error",
    "jsx-a11y/role-supports-aria-props": "error",
    
    /* Tailwind CSS rules */
    "tailwindcss/classnames-order": "warn",
    "tailwindcss/no-custom-classname": "off",
    "tailwindcss/no-contradicting-classname": "error"
  },
  "overrides": [
    {
      "files": ["**/*.test.ts", "**/*.test.tsx", "**/*.spec.ts", "**/*.spec.tsx"],
      "extends": ["plugin:testing-library/react"],
      "rules": {
        "@typescript-eslint/unbound-method": "off",
        "@typescript-eslint/no-non-null-assertion": "off"
      }
    },
    {
      "files": ["src/app/**/*.tsx", "src/app/**/*.ts"],
      "rules": {
        "import/no-default-export": "off"
      }
    },
    {
      "files": ["*.config.js", "*.config.ts"],
      "rules": {
        "@typescript-eslint/no-var-requires": "off",
        "import/no-default-export": "off"
      }
    },
    {
      "files": ["src/lib/**/*.ts"],
      "rules": {
        "no-console": "error"
      }
    }
  ],
  "settings": {
    "react": {
      "version": "detect"
    },
    "tailwindcss": {
      "callees": ["cn", "clsx", "classnames", "tw"],
      "config": "tailwind.config.js"
    }
  },
  "ignorePatterns": [
    "node_modules/",
    ".next/",
    "out/",
    "dist/",
    "coverage/",
    "storybook-static/",
    "playwright-report/",
    "test-results/",
    "*.config.js",
    "*.config.ts"
  ]
}